{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\a-bloom\\\\client\\\\src\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { notify } from '../reducers/notificationReducer';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport getEditedThumbail from '../utils/cloudinaryTransform';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Paper, Typography, useMediaQuery, CardMedia, Link, Button } from '@material-ui/core';\nimport { useCardStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport LinkIcon from '@material-ui/icons/Link';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = _ref => {\n  _s();\n\n  let {\n    post,\n    toggleUpvote,\n    toggleDownvote\n  } = _ref;\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    commentCount,\n    createdAt,\n    updatedAt\n  } = post;\n  const classes = useCardStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const {\n    user,\n    darkMode\n  } = useSelector(state => state);\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const linkToShow = postType === 'Link' ? linkSubmission : postType === 'Image' ? imageSubmission.imageLink : '';\n  const formattedLink = trimLink(prettifyLink(linkToShow), 30);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.votesWrapper,\n      children: [/*#__PURE__*/_jsxDEV(UpvoteButton, {\n        user: user,\n        body: post,\n        handleUpvote: handleUpvoteToggle,\n        size: isMobile ? 'small' : 'medium'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          color: isUpvoted ? '#FF8b60' : isDownvoted ? '#9494FF' : darkMode ? '#e4e4e4' : '#333',\n          fontWeight: 600\n        },\n        children: pointsCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownvoteButton, {\n        user: user,\n        body: post,\n        handleDownvote: handleDownvoteToggle,\n        size: isMobile ? 'small' : 'medium'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.thumbnailWrapper,\n      children: postType === 'Text' ? /*#__PURE__*/_jsxDEV(RouterLink, {\n        to: `/comments/${id}`,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          square: true,\n          className: classes.thumbnail,\n          children: /*#__PURE__*/_jsxDEV(MessageIcon, {\n            fontSize: \"inherit\",\n            className: classes.thumbnailIcon,\n            style: {\n              color: '#787878'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : postType === 'Link' ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fixUrl(linkSubmission),\n        target: \"_noblank\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          square: true,\n          className: classes.thumbnail,\n          children: /*#__PURE__*/_jsxDEV(LinkIcon, {\n            fontSize: \"inherit\",\n            className: classes.thumbnailIcon,\n            style: {\n              color: '#787878'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 0,\n        square: true,\n        className: classes.thumbnail,\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.thumbnail,\n          image: getEditedThumbail(imageSubmission.imageLink),\n          title: title,\n          component: \"a\",\n          href: imageSubmission.imageLink,\n          target: \"_noblank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postInfoWrapper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        children: [title, ' ', /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"primary\",\n          className: classes.url,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: postType === 'Link' ? fixUrl(linkSubmission) : postType === 'Image' ? imageSubmission.imageLink : '',\n            children: [formattedLink, postType === 'Text' ? null : /*#__PURE__*/_jsxDEV(OpenInNewIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          to: `/r/${subreddit.subredditName}`,\n          children: [\"b/\", subreddit.subredditName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          className: classes.userAndDate,\n          children: [\"Posted by\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            component: RouterLink,\n            to: `/u/${author.username}`,\n            children: [\"u/\", author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), ' ', \"\\u2022 \", /*#__PURE__*/_jsxDEV(TimeAgo, {\n            datetime: new Date(createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), createdAt !== updatedAt && '*']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.bottomBtns,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 24\n          }, this),\n          className: classes.commentsBtn,\n          component: RouterLink,\n          to: `/comments/${id}`,\n          size: isMobile ? 'small' : 'medium',\n          children: [commentCount, \" comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), user && user.id === author.id && /*#__PURE__*/_jsxDEV(EditDeleteMenu, {\n          id: id,\n          isMobile: isMobile,\n          title: title,\n          postType: postType,\n          subreddit: subreddit,\n          textSubmission: textSubmission,\n          linkSubmission: linkSubmission\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostCard, \"GudHAjmORetKd/dGHg+lRyIOgFE=\", false, function () {\n  return [useCardStyles, useTheme, useMediaQuery, useDispatch, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/1/Desktop/a-bloom/client/src/components/PostCard.js"],"names":["React","useSelector","useDispatch","Link","RouterLink","UpvoteButton","DownvoteButton","notify","EditDeleteMenu","getEditedThumbail","trimLink","prettifyLink","fixUrl","TimeAgo","getErrorMsg","Paper","Typography","useMediaQuery","CardMedia","Button","useCardStyles","useTheme","MessageIcon","LinkIcon","OpenInNewIcon","CommentIcon","PostCard","post","toggleUpvote","toggleDownvote","id","title","postType","textSubmission","linkSubmission","imageSubmission","subreddit","author","upvotedBy","downvotedBy","pointsCount","commentCount","createdAt","updatedAt","classes","theme","isMobile","breakpoints","down","dispatch","user","darkMode","state","isUpvoted","includes","isDownvoted","handleUpvoteToggle","updatedUpvotedBy","filter","u","updatedDownvotedBy","d","err","handleDownvoteToggle","linkToShow","imageLink","formattedLink","root","votesWrapper","color","fontWeight","thumbnailWrapper","thumbnail","thumbnailIcon","postInfoWrapper","url","subredditName","userAndDate","username","Date","bottomBtns","commentsBtn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\r\nimport { notify } from '../reducers/notificationReducer';\r\nimport EditDeleteMenu from './EditDeleteMenu';\r\nimport getEditedThumbail from '../utils/cloudinaryTransform';\r\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\r\nimport TimeAgo from 'timeago-react';\r\nimport getErrorMsg from '../utils/getErrorMsg';\r\n\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n  CardMedia,\r\n  Link,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { useCardStyles } from '../styles/muiStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst PostCard = ({ post, toggleUpvote, toggleDownvote }) => {\r\n  const {\r\n    id,\r\n    title,\r\n    postType,\r\n    textSubmission,\r\n    linkSubmission,\r\n    imageSubmission,\r\n    subreddit,\r\n    author,\r\n    upvotedBy,\r\n    downvotedBy,\r\n    pointsCount,\r\n    commentCount,\r\n    createdAt,\r\n    updatedAt,\r\n  } = post;\r\n\r\n  const classes = useCardStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const dispatch = useDispatch();\r\n  const { user, darkMode } = useSelector((state) => state);\r\n\r\n  const isUpvoted = user && upvotedBy.includes(user.id);\r\n  const isDownvoted = user && downvotedBy.includes(user.id);\r\n\r\n  const handleUpvoteToggle = async () => {\r\n    try {\r\n      if (isUpvoted) {\r\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\r\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\r\n      } else {\r\n        const updatedUpvotedBy = [...upvotedBy, user.id];\r\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\r\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\r\n      }\r\n    } catch (err) {\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const handleDownvoteToggle = async () => {\r\n    try {\r\n      if (isDownvoted) {\r\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\r\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\r\n      } else {\r\n        const updatedDownvotedBy = [...downvotedBy, user.id];\r\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\r\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\r\n      }\r\n    } catch (err) {\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const linkToShow =\r\n    postType === 'Link'\r\n      ? linkSubmission\r\n      : postType === 'Image'\r\n      ? imageSubmission.imageLink\r\n      : '';\r\n\r\n  const formattedLink = trimLink(prettifyLink(linkToShow), 30);\r\n\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <div className={classes.votesWrapper}>\r\n        <UpvoteButton\r\n          user={user}\r\n          body={post}\r\n          handleUpvote={handleUpvoteToggle}\r\n          size={isMobile ? 'small' : 'medium'}\r\n        />\r\n        <Typography\r\n          variant=\"body1\"\r\n          style={{\r\n            color: isUpvoted\r\n              ? '#FF8b60'\r\n              : isDownvoted\r\n              ? '#9494FF'\r\n              : darkMode\r\n              ? '#e4e4e4'\r\n              : '#333',\r\n            fontWeight: 600,\r\n          }}\r\n        >\r\n          {pointsCount}\r\n        </Typography>\r\n        <DownvoteButton\r\n          user={user}\r\n          body={post}\r\n          handleDownvote={handleDownvoteToggle}\r\n          size={isMobile ? 'small' : 'medium'}\r\n        />\r\n      </div>\r\n      <div className={classes.thumbnailWrapper}>\r\n        {postType === 'Text' ? (\r\n          <RouterLink to={`/comments/${id}`}>\r\n            <Paper elevation={0} square className={classes.thumbnail}>\r\n              <MessageIcon\r\n                fontSize=\"inherit\"\r\n                className={classes.thumbnailIcon}\r\n                style={{ color: '#787878' }}\r\n              />\r\n            </Paper>\r\n          </RouterLink>\r\n        ) : postType === 'Link' ? (\r\n          <a href={fixUrl(linkSubmission)} target=\"_noblank\">\r\n            <Paper elevation={0} square className={classes.thumbnail}>\r\n              <LinkIcon\r\n                fontSize=\"inherit\"\r\n                className={classes.thumbnailIcon}\r\n                style={{ color: '#787878' }}\r\n              />\r\n            </Paper>\r\n          </a>\r\n        ) : (\r\n          <Paper elevation={0} square className={classes.thumbnail}>\r\n            <CardMedia\r\n              className={classes.thumbnail}\r\n              image={getEditedThumbail(imageSubmission.imageLink)}\r\n              title={title}\r\n              component=\"a\"\r\n              href={imageSubmission.imageLink}\r\n              target=\"_noblank\"\r\n            />\r\n          </Paper>\r\n        )}\r\n      </div>\r\n      <div className={classes.postInfoWrapper}>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {title}{' '}\r\n          <Typography variant=\"caption\" color=\"primary\" className={classes.url}>\r\n            <Link\r\n              href={\r\n                postType === 'Link'\r\n                  ? fixUrl(linkSubmission)\r\n                  : postType === 'Image'\r\n                  ? imageSubmission.imageLink\r\n                  : ''\r\n              }\r\n            >\r\n              {formattedLink}\r\n              {postType === 'Text' ? null : (\r\n                <OpenInNewIcon fontSize=\"inherit\" />\r\n              )}\r\n            </Link>\r\n          </Typography>\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n          <Link component={RouterLink} to={`/r/${subreddit.subredditName}`}>\r\n            b/{subreddit.subredditName}\r\n          </Link>\r\n          <Typography variant=\"caption\" className={classes.userAndDate}>\r\n            Posted by{' '}\r\n            <Link component={RouterLink} to={`/u/${author.username}`}>\r\n              u/{author.username}\r\n            </Link>{' '}\r\n            • <TimeAgo datetime={new Date(createdAt)} />\r\n            {createdAt !== updatedAt && '*'}\r\n          </Typography>\r\n        </Typography>\r\n        <div className={classes.bottomBtns}>\r\n          <Button\r\n            startIcon={<CommentIcon />}\r\n            className={classes.commentsBtn}\r\n            component={RouterLink}\r\n            to={`/comments/${id}`}\r\n            size={isMobile ? 'small' : 'medium'}\r\n          >\r\n            {commentCount} comments\r\n          </Button>\r\n          {user && user.id === author.id && (\r\n            <EditDeleteMenu\r\n              id={id}\r\n              isMobile={isMobile}\r\n              title={title}\r\n              postType={postType}\r\n              subreddit={subreddit}\r\n              textSubmission={textSubmission}\r\n              linkSubmission={linkSubmission}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}