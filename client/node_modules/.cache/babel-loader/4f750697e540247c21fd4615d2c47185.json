{"ast":null,"code":"import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { token } from './auth';\nconst baseUrl = `${backendUrl}/api/subreddits`;\n\nconst setConfig = () => {\n  return {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n};\n\nconst getAllSubreddits = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst getSubreddit = async (subredditName, sortBy, limit, page) => {\n  const response = await axios.get(`${baseUrl}/r/${subredditName}/?sortby=${sortBy}&limit=${limit}&page=${page}`);\n  return response.data;\n};\n\nconst createSubreddit = async subredditObj => {\n  const response = await axios.post(`${baseUrl}`, subredditObj, setConfig());\n  return response.data;\n};\n\nconst subscribeSub = async id => {\n  const response = await axios.post(`${baseUrl}/${id}/subscribe`, null, setConfig());\n  return response.data;\n};\n\nconst updateDescription = async (id, descriptionObj) => {\n  const response = await axios.patch(`${baseUrl}/${id}`, descriptionObj, setConfig());\n  return response.data;\n};\n\nconst getTopSubreddits = async () => {\n  const response = await axios.get(`${baseUrl}/top10`);\n  return response.data;\n};\n\nconst subService = {\n  getAllSubreddits,\n  createSubreddit,\n  getSubreddit,\n  subscribeSub,\n  updateDescription,\n  getTopSubreddits\n};\nexport default subService;","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/services/subs.js"],"names":["axios","backendUrl","token","baseUrl","setConfig","headers","getAllSubreddits","response","get","data","getSubreddit","subredditName","sortBy","limit","page","createSubreddit","subredditObj","post","subscribeSub","id","updateDescription","descriptionObj","patch","getTopSubreddits","subService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,QAAtB;AAEA,MAAMC,OAAO,GAAI,GAAEF,UAAW,iBAA9B;;AAEA,MAAMG,SAAS,GAAG,MAAM;AACtB,SAAO;AACLC,IAAAA,OAAO,EAAE;AAAE,sBAAgBH;AAAlB;AADJ,GAAP;AAGD,CAJD;;AAMA,MAAMI,gBAAgB,GAAG,YAAY;AACnC,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUL,OAAV,CAAvB;AACA,SAAOI,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,YAAY,GAAG,OAAOC,aAAP,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,IAArC,KAA8C;AACjE,QAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CACpB,GAAEL,OAAQ,MAAKQ,aAAc,YAAWC,MAAO,UAASC,KAAM,SAAQC,IAAK,EADvD,CAAvB;AAGA,SAAOP,QAAQ,CAACE,IAAhB;AACD,CALD;;AAOA,MAAMM,eAAe,GAAG,MAAOC,YAAP,IAAwB;AAC9C,QAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAN,CAAY,GAAEd,OAAQ,EAAtB,EAAyBa,YAAzB,EAAuCZ,SAAS,EAAhD,CAAvB;AACA,SAAOG,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMS,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,QAAMZ,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAN,CACpB,GAAEd,OAAQ,IAAGgB,EAAG,YADI,EAErB,IAFqB,EAGrBf,SAAS,EAHY,CAAvB;AAKA,SAAOG,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMW,iBAAiB,GAAG,OAAOD,EAAP,EAAWE,cAAX,KAA8B;AACtD,QAAMd,QAAQ,GAAG,MAAMP,KAAK,CAACsB,KAAN,CACpB,GAAEnB,OAAQ,IAAGgB,EAAG,EADI,EAErBE,cAFqB,EAGrBjB,SAAS,EAHY,CAAvB;AAKA,SAAOG,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMc,gBAAgB,GAAG,YAAY;AACnC,QAAMhB,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEL,OAAQ,QAArB,CAAvB;AACA,SAAOI,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMe,UAAU,GAAG;AACjBlB,EAAAA,gBADiB;AAEjBS,EAAAA,eAFiB;AAGjBL,EAAAA,YAHiB;AAIjBQ,EAAAA,YAJiB;AAKjBE,EAAAA,iBALiB;AAMjBG,EAAAA;AANiB,CAAnB;AASA,eAAeC,UAAf","sourcesContent":["import axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\nimport { token } from './auth';\r\n\r\nconst baseUrl = `${backendUrl}/api/subreddits`;\r\n\r\nconst setConfig = () => {\r\n  return {\r\n    headers: { 'x-auth-token': token },\r\n  };\r\n};\r\n\r\nconst getAllSubreddits = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst getSubreddit = async (subredditName, sortBy, limit, page) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}/r/${subredditName}/?sortby=${sortBy}&limit=${limit}&page=${page}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst createSubreddit = async (subredditObj) => {\r\n  const response = await axios.post(`${baseUrl}`, subredditObj, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst subscribeSub = async (id) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${id}/subscribe`,\r\n    null,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst updateDescription = async (id, descriptionObj) => {\r\n  const response = await axios.patch(\r\n    `${baseUrl}/${id}`,\r\n    descriptionObj,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst getTopSubreddits = async () => {\r\n  const response = await axios.get(`${baseUrl}/top10`);\r\n  return response.data;\r\n};\r\n\r\nconst subService = {\r\n  getAllSubreddits,\r\n  createSubreddit,\r\n  getSubreddit,\r\n  subscribeSub,\r\n  updateDescription,\r\n  getTopSubreddits,\r\n};\r\n\r\nexport default subService;\r\n"]},"metadata":{},"sourceType":"module"}