{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\a-bloom\\\\client\\\\src\\\\components\\\\PostFormModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PostForm from './PostForm';\nimport HideOnScroll from './HideOnScroll';\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\nimport { DialogTitle, DialogContent } from './CustomDialogTitle';\nimport { Dialog, Button, Fab, IconButton, Paper, Avatar, useMediaQuery, MenuItem, ListItemIcon } from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ImageIcon from '@material-ui/icons/Image';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPostModal = _ref => {\n  _s();\n\n  let {\n    actionType,\n    handleMenuClose,\n    postToEditType,\n    postToEditTitle,\n    postToEditSub,\n    postToEditId,\n    textSubmission,\n    linkSubmission,\n    fromSubreddit\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [postType, setPostType] = useState('Text');\n  const user = useSelector(state => state.user);\n  const classes = useDialogStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTextPost = () => {\n    setPostType('Text');\n    handleClickOpen();\n  };\n\n  const handleImagePost = () => {\n    setPostType('Image');\n    handleClickOpen();\n  };\n\n  const handleLinkPost = () => {\n    setPostType('Link');\n    handleClickOpen();\n  };\n\n  const handleMenuClick = () => {\n    handleClickOpen();\n    handleMenuClose();\n  };\n\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [actionType === 'edit' ? /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: handleMenuClick,\n      children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n          style: {\n            marginRight: 7\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), \"Edit Post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : isMobile ? /*#__PURE__*/_jsxDEV(HideOnScroll, {\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.fab,\n        color: \"primary\",\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(PostAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.createPostWrapper,\n      children: [user.avatar && user.avatar.exists ? /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: user.username,\n        src: getCircularAvatar(user.avatar.imageLink)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.defaultAvatar,\n        children: user.username[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        onClick: handleTextPost,\n        fullWidth: true,\n        className: classes.createBtn,\n        startIcon: /*#__PURE__*/_jsxDEV(PostAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 24\n        }, this),\n        size: \"large\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.iconGroup,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleImagePost,\n          children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleLinkPost,\n          children: /*#__PURE__*/_jsxDEV(LinkIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      classes: {\n        paper: classes.dialogWrapper\n      },\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        onClose: handleClose,\n        children: actionType === 'edit' ? 'Update your post' : 'Add a new post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(PostForm, {\n          actionType: actionType,\n          postType: postType,\n          postToEditType: postToEditType,\n          postToEditTitle: postToEditTitle,\n          postToEditSub: postToEditSub,\n          postToEditId: postToEditId,\n          textSubmission: textSubmission,\n          linkSubmission: linkSubmission,\n          fromSubreddit: fromSubreddit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostModal, \"Je691RC1NK/sfwgkxyyRWMf+giQ=\", false, function () {\n  return [useSelector, useDialogStyles, useTheme, useMediaQuery];\n});\n\n_c = AddPostModal;\nexport default AddPostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostModal\");","map":{"version":3,"sources":["C:/Users/1/Desktop/a-bloom/client/src/components/PostFormModal.js"],"names":["React","useState","useSelector","PostForm","HideOnScroll","getCircularAvatar","DialogTitle","DialogContent","Dialog","Button","Fab","IconButton","Paper","Avatar","useMediaQuery","MenuItem","ListItemIcon","useDialogStyles","useTheme","PostAddIcon","ImageIcon","LinkIcon","EditIcon","AddPostModal","actionType","handleMenuClose","postToEditType","postToEditTitle","postToEditSub","postToEditId","textSubmission","linkSubmission","fromSubreddit","open","setOpen","postType","setPostType","user","state","classes","theme","isMobile","breakpoints","down","handleClickOpen","handleClose","handleTextPost","handleImagePost","handleLinkPost","handleMenuClick","marginRight","fab","createPostWrapper","avatar","exists","username","imageLink","defaultAvatar","createBtn","iconGroup","paper","dialogWrapper"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PostForm from './PostForm';\r\nimport HideOnScroll from './HideOnScroll';\r\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\r\n\r\nimport { DialogTitle, DialogContent } from './CustomDialogTitle';\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Fab,\r\n  IconButton,\r\n  Paper,\r\n  Avatar,\r\n  useMediaQuery,\r\n  MenuItem,\r\n  ListItemIcon,\r\n} from '@material-ui/core';\r\nimport { useDialogStyles } from '../styles/muiStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst AddPostModal = ({\r\n  actionType,\r\n  handleMenuClose,\r\n  postToEditType,\r\n  postToEditTitle,\r\n  postToEditSub,\r\n  postToEditId,\r\n  textSubmission,\r\n  linkSubmission,\r\n  fromSubreddit,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [postType, setPostType] = useState('Text');\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const classes = useDialogStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleTextPost = () => {\r\n    setPostType('Text');\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleImagePost = () => {\r\n    setPostType('Image');\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleLinkPost = () => {\r\n    setPostType('Link');\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    handleClickOpen();\r\n    handleMenuClose();\r\n  };\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {actionType === 'edit' ? (\r\n        <MenuItem onClick={handleMenuClick}>\r\n          <ListItemIcon>\r\n            <EditIcon style={{ marginRight: 7 }} />\r\n            Edit Post\r\n          </ListItemIcon>\r\n        </MenuItem>\r\n      ) : isMobile ? (\r\n        <HideOnScroll>\r\n          <Fab\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            onClick={handleClickOpen}\r\n          >\r\n            <PostAddIcon />\r\n          </Fab>\r\n        </HideOnScroll>\r\n      ) : (\r\n        <Paper variant=\"outlined\" className={classes.createPostWrapper}>\r\n          {user.avatar && user.avatar.exists ? (\r\n            <Avatar\r\n              alt={user.username}\r\n              src={getCircularAvatar(user.avatar.imageLink)}\r\n            />\r\n          ) : (\r\n            <Avatar className={classes.defaultAvatar}>\r\n              {user.username[0]}\r\n            </Avatar>\r\n          )}\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            onClick={handleTextPost}\r\n            fullWidth\r\n            className={classes.createBtn}\r\n            startIcon={<PostAddIcon />}\r\n            size=\"large\"\r\n          >\r\n            Create Post\r\n          </Button>\r\n          <div className={classes.iconGroup}>\r\n            <IconButton onClick={handleImagePost}>\r\n              <ImageIcon color=\"primary\" />\r\n            </IconButton>\r\n            <IconButton onClick={handleLinkPost}>\r\n              <LinkIcon color=\"primary\" />\r\n            </IconButton>\r\n          </div>\r\n        </Paper>\r\n      )}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        classes={{ paper: classes.dialogWrapper }}\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle onClose={handleClose}>\r\n          {actionType === 'edit' ? 'Update your post' : 'Add a new post'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <PostForm\r\n            actionType={actionType}\r\n            postType={postType}\r\n            postToEditType={postToEditType}\r\n            postToEditTitle={postToEditTitle}\r\n            postToEditSub={postToEditSub}\r\n            postToEditId={postToEditId}\r\n            textSubmission={textSubmission}\r\n            linkSubmission={linkSubmission}\r\n            fromSubreddit={fromSubreddit}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostModal;\r\n"]},"metadata":{},"sourceType":"module"}