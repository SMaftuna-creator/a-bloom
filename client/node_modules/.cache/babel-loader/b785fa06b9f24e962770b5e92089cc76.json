{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\bloom_app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from './reducers/userReducer';\nimport { fetchPosts } from './reducers/postReducer';\nimport { setSubList, setTopSubsList } from './reducers/subReducer';\nimport { setDarkMode } from './reducers/themeReducer';\nimport { notify } from './reducers/notificationReducer';\nimport NavBar from './components/NavBar';\nimport ToastNotif from './components/ToastNotif';\nimport Routes from './Routes';\nimport getErrorMsg from './utils/getErrorMsg';\nimport { Paper } from '@material-ui/core/';\nimport customTheme from './styles/customTheme';\nimport { useMainPaperStyles } from './styles/muiStyles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const classes = useMainPaperStyles();\n  const dispatch = useDispatch();\n  const {\n    darkMode\n  } = useSelector(state => state);\n  useEffect(() => {\n    const setPostsAndSubreddits = async () => {\n      try {\n        await dispatch(fetchPosts('hot'));\n        await dispatch(setSubList());\n        await dispatch(setTopSubsList());\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n\n    dispatch(setUser());\n    dispatch(setDarkMode());\n    setPostsAndSubreddits(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: customTheme(darkMode),\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 0,\n      children: [/*#__PURE__*/_jsxDEV(ToastNotif, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"O6Z3gKUtjX8MdGa8pbTdSR5ohTQ=\", false, function () {\n  return [useMainPaperStyles, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/App.js"],"names":["React","useEffect","useDispatch","useSelector","setUser","fetchPosts","setSubList","setTopSubsList","setDarkMode","notify","NavBar","ToastNotif","Routes","getErrorMsg","Paper","customTheme","useMainPaperStyles","ThemeProvider","App","classes","dispatch","darkMode","state","setPostsAndSubreddits","err","root"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,uBAA3C;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGH,kBAAkB,EAAlC;AACA,QAAMI,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAelB,WAAW,CAAEmB,KAAD,IAAWA,KAAZ,CAAhC;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,qBAAqB,GAAG,YAAY;AACxC,UAAI;AACF,cAAMH,QAAQ,CAACf,UAAU,CAAC,KAAD,CAAX,CAAd;AACA,cAAMe,QAAQ,CAACd,UAAU,EAAX,CAAd;AACA,cAAMc,QAAQ,CAACb,cAAc,EAAf,CAAd;AACD,OAJD,CAIE,OAAOiB,GAAP,EAAY;AACZJ,QAAAA,QAAQ,CAACX,MAAM,CAACI,WAAW,CAACW,GAAD,CAAZ,EAAmB,OAAnB,CAAP,CAAR;AACD;AACF,KARD;;AAUAJ,IAAAA,QAAQ,CAAChB,OAAO,EAAR,CAAR;AACAgB,IAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACAe,IAAAA,qBAAqB,GAbP,CAcd;AACD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAER,WAAW,CAACM,QAAD,CAAjC;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,OAAO,CAACM,IAA1B;AAAgC,MAAA,SAAS,EAAE,CAA3C;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA/BD;;GAAMP,G;UACYF,kB,EACCd,W,EACIC,W;;;KAHjBe,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUser } from './reducers/userReducer';\r\nimport { fetchPosts } from './reducers/postReducer';\r\nimport { setSubList, setTopSubsList } from './reducers/subReducer';\r\nimport { setDarkMode } from './reducers/themeReducer';\r\nimport { notify } from './reducers/notificationReducer';\r\nimport NavBar from './components/NavBar';\r\nimport ToastNotif from './components/ToastNotif';\r\nimport Routes from './Routes';\r\nimport getErrorMsg from './utils/getErrorMsg';\r\n\r\nimport { Paper } from '@material-ui/core/';\r\nimport customTheme from './styles/customTheme';\r\nimport { useMainPaperStyles } from './styles/muiStyles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst App = () => {\r\n  const classes = useMainPaperStyles();\r\n  const dispatch = useDispatch();\r\n  const { darkMode } = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    const setPostsAndSubreddits = async () => {\r\n      try {\r\n        await dispatch(fetchPosts('hot'));\r\n        await dispatch(setSubList());\r\n        await dispatch(setTopSubsList());\r\n      } catch (err) {\r\n        dispatch(notify(getErrorMsg(err), 'error'));\r\n      }\r\n    };\r\n\r\n    dispatch(setUser());\r\n    dispatch(setDarkMode());\r\n    setPostsAndSubreddits();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={customTheme(darkMode)}>\r\n      <Paper className={classes.root} elevation={0}>\r\n        <ToastNotif />\r\n        <NavBar />\r\n        <Routes />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}