{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\bloom_app\\\\client\\\\src\\\\components\\\\DesktopUserMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport AuthFormModal from './AuthFormModal';\nimport SubFormModal from './SubFormModal';\nimport UpdateAvatarModal from './UpdateAvatarModal';\nimport DarkModeMenuItem from './DarkModeMenuItem';\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\nimport storageService from '../utils/localStorage';\nimport { Button, Menu, MenuItem, Avatar, Typography, ListItemIcon, Divider } from '@material-ui/core';\nimport { useUserMenuStyles } from '../styles/muiStyles';\nimport FilterVintageIcon from '@material-ui/icons/FilterVintage';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DesktopUserMenu = _ref => {\n  _s();\n\n  var _loggedUser$avatar;\n\n  let {\n    user,\n    handleLogout\n  } = _ref;\n  const classes = useUserMenuStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogoutClick = () => {\n    handleClose();\n    handleLogout();\n  };\n\n  const loggedUser = storageService.loadUser() || user;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loggedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleMenu,\n        className: classes.userBtn,\n        children: [loggedUser !== null && loggedUser !== void 0 && (_loggedUser$avatar = loggedUser.avatar) !== null && _loggedUser$avatar !== void 0 && _loggedUser$avatar.exists ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: loggedUser.username,\n          src: getCircularAvatar(loggedUser.avatar.imageLink),\n          variant: \"rounded\",\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          className: classes.avatar,\n          children: loggedUser.username[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"secondary\",\n            children: loggedUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            className: classes.karmaWrapper,\n            children: [/*#__PURE__*/_jsxDEV(FilterVintageIcon, {\n              fontSize: \"inherit\",\n              style: {\n                marginRight: '0.2em'\n              },\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), loggedUser.karma, \" karma\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: anchorEl,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        keepMounted: true,\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        open: Boolean(anchorEl),\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          component: RouterLink,\n          to: `/u/${loggedUser.username}`,\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n              style: {\n                marginRight: 7\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), \" My Profile\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SubFormModal, {\n          type: \"menu\",\n          handleCloseMenu: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UpdateAvatarModal, {\n          handleCloseMenu: handleClose,\n          user: loggedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: handleLogoutClick,\n          children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: [/*#__PURE__*/_jsxDEV(PowerSettingsNewIcon, {\n              style: {\n                marginRight: 7\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), \" Logout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DarkModeMenuItem, {\n          closeMenu: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.navItems,\n      children: [/*#__PURE__*/_jsxDEV(AuthFormModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DarkModeMenuItem, {\n        closeMenu: handleClose,\n        navItem: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DesktopUserMenu, \"C6nsnh1dcVSw8F7K2RAAv/bV50Q=\", false, function () {\n  return [useUserMenuStyles];\n});\n\n_c = DesktopUserMenu;\nexport default DesktopUserMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesktopUserMenu\");","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/components/DesktopUserMenu.js"],"names":["React","useState","Link","RouterLink","AuthFormModal","SubFormModal","UpdateAvatarModal","DarkModeMenuItem","getCircularAvatar","storageService","Button","Menu","MenuItem","Avatar","Typography","ListItemIcon","Divider","useUserMenuStyles","FilterVintageIcon","AccountCircleIcon","PowerSettingsNewIcon","DesktopUserMenu","user","handleLogout","classes","anchorEl","setAnchorEl","handleMenu","event","currentTarget","handleClose","handleLogoutClick","loggedUser","loadUser","userBtn","avatar","exists","username","imageLink","karmaWrapper","marginRight","karma","vertical","horizontal","Boolean","navItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport AuthFormModal from './AuthFormModal';\r\nimport SubFormModal from './SubFormModal';\r\nimport UpdateAvatarModal from './UpdateAvatarModal';\r\nimport DarkModeMenuItem from './DarkModeMenuItem';\r\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\r\nimport storageService from '../utils/localStorage';\r\n\r\nimport {\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Avatar,\r\n  Typography,\r\n  ListItemIcon,\r\n  Divider,\r\n} from '@material-ui/core';\r\nimport { useUserMenuStyles } from '../styles/muiStyles';\r\nimport FilterVintageIcon from '@material-ui/icons/FilterVintage';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\n\r\nconst DesktopUserMenu = ({ user, handleLogout }) => {\r\n  const classes = useUserMenuStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogoutClick = () => {\r\n    handleClose();\r\n    handleLogout();\r\n  };\r\n\r\n  const loggedUser = storageService.loadUser() || user;\r\n\r\n  return (\r\n    <div>\r\n      {loggedUser ? (\r\n        <>\r\n          <Button onClick={handleMenu} className={classes.userBtn}>\r\n            {loggedUser?.avatar?.exists ? (\r\n              <Avatar\r\n                alt={loggedUser.username}\r\n                src={getCircularAvatar(loggedUser.avatar.imageLink)}\r\n                variant=\"rounded\"\r\n                className={classes.avatar}\r\n              />\r\n            ) : (\r\n              <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                {loggedUser.username[0]}\r\n              </Avatar>\r\n            )}\r\n            <div>\r\n              <Typography color=\"secondary\">{loggedUser.username}</Typography>\r\n              <Typography variant=\"caption\" className={classes.karmaWrapper}>\r\n                <FilterVintageIcon\r\n                  fontSize=\"inherit\"\r\n                  style={{ marginRight: '0.2em' }}\r\n                  color=\"secondary\"\r\n                />\r\n                {loggedUser.karma} karma\r\n              </Typography>\r\n            </div>\r\n          </Button>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem\r\n              component={RouterLink}\r\n              to={`/u/${loggedUser.username}`}\r\n              onClick={handleClose}\r\n            >\r\n              <ListItemIcon>\r\n                <AccountCircleIcon style={{ marginRight: 7 }} /> My Profile\r\n              </ListItemIcon>\r\n            </MenuItem>\r\n            <SubFormModal type=\"menu\" handleCloseMenu={handleClose} />\r\n            <UpdateAvatarModal\r\n              handleCloseMenu={handleClose}\r\n              user={loggedUser}\r\n            />\r\n            <MenuItem onClick={handleLogoutClick}>\r\n              <ListItemIcon>\r\n                <PowerSettingsNewIcon style={{ marginRight: 7 }} /> Logout\r\n              </ListItemIcon>\r\n            </MenuItem>\r\n            <Divider variant=\"middle\" />\r\n            <DarkModeMenuItem closeMenu={handleClose} />\r\n          </Menu>\r\n        </>\r\n      ) : (\r\n        <div className={classes.navItems}>\r\n          <AuthFormModal />\r\n          <DarkModeMenuItem closeMenu={handleClose} navItem={true} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DesktopUserMenu;\r\n"]},"metadata":{},"sourceType":"module"}