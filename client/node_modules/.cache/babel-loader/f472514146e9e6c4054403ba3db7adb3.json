{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\bloom_app\\\\client\\\\src\\\\components\\\\SubPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSub, toggleUpvote, toggleDownvote, toggleSubscribe, editDescription, loadSubPosts } from '../reducers/subPageReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport SortTabBar from './SortTabBar';\nimport PostCard from './PostCard';\nimport LoadMoreButton from './LoadMoreButton';\nimport PostFormModal from './PostFormModal';\nimport ErrorPage from './ErrorPage';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Container, Paper, Typography, Button, Link, TextField } from '@material-ui/core';\nimport { useSubPageStyles } from '../styles/muiStyles';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CheckIcon from '@material-ui/icons/Check';\nimport GroupIcon from '@material-ui/icons/Group';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SubPage = () => {\n  _s();\n\n  const classes = useSubPageStyles();\n  const {\n    sub\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    user,\n    subPage\n  } = useSelector(state => state);\n  const [editOpen, setEditOpen] = useState(false);\n  const [descInput, setDescInput] = useState('');\n  const [sortBy, setSortBy] = useState('hot');\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [postsLoading, setPostsLoading] = useState(false);\n  const [pageError, setPageError] = useState(null);\n  useEffect(() => {\n    const getSub = async () => {\n      try {\n        await dispatch(fetchSub(sub, 'hot'));\n        setPageLoading(false);\n      } catch (err) {\n        setPageError(getErrorMsg(err));\n      }\n    };\n\n    getSub(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sub]);\n  useEffect(() => {\n    if (subPage) {\n      setDescInput(subPage.subDetails.description);\n    }\n  }, [subPage]);\n\n  if (pageError) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.mainPaper,\n        children: /*#__PURE__*/_jsxDEV(ErrorPage, {\n          errorMsg: pageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!subPage || pageLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.mainPaper,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          text: 'Fetching community data...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    subredditName,\n    subscribedBy,\n    subscriberCount,\n    description,\n    admin,\n    createdAt,\n    id\n  } = subPage.subDetails;\n  const isSubscribed = user && subscribedBy.includes(user.id);\n\n  const handleSubJoin = async () => {\n    try {\n      let updatedSubscribedBy = [];\n\n      if (isSubscribed) {\n        updatedSubscribedBy = subscribedBy.filter(s => s !== user.id);\n      } else {\n        updatedSubscribedBy = [...subscribedBy, user.id];\n      }\n\n      await dispatch(toggleSubscribe(id, updatedSubscribedBy));\n      let message = isSubscribed ? `Unsubscribed from r/${subredditName}` : `Subscribed to r/${subredditName}!`;\n      dispatch(notify(message, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleEditDescription = async () => {\n    try {\n      await dispatch(editDescription(id, descInput));\n      setEditOpen(false);\n      dispatch(notify(`Updated description of your sub: r/${subredditName}`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleTabChange = async (e, newValue) => {\n    try {\n      setPostsLoading(true);\n      await dispatch(fetchSub(sub, newValue));\n      setSortBy(newValue);\n      setPostsLoading(false);\n\n      if (page !== 1) {\n        setPage(1);\n      }\n    } catch (err) {\n      setPostsLoading(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadSubPosts(sub, sortBy, page + 1));\n      setPage(prevState => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    disableGutters: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.mainPaper,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.subInfoWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.firstPanel,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"secondary\",\n            children: [\"b/\", subredditName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.description,\n            children: [!editOpen ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.inputDiv,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                multiline: true,\n                required: true,\n                fullWidth: true,\n                rows: 2,\n                rowsMax: Infinity,\n                value: descInput,\n                onChange: e => setDescInput(e.target.value),\n                variant: \"outlined\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.submitBtns,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => setEditOpen(false),\n                  color: \"primary\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.cancelBtn,\n                  style: {\n                    padding: '0.2em'\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleEditDescription,\n                  color: \"primary\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  style: {\n                    padding: '0.2em'\n                  },\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), user && user.id === admin.id && !editOpen && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setEditOpen(prevState => !prevState),\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"primary\",\n              style: {\n                padding: '0.2em',\n                marginLeft: '0.5em'\n              },\n              startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 30\n              }, this),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.iconText,\n            color: \"secondary\",\n            children: [/*#__PURE__*/_jsxDEV(CakeIcon, {\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), \" Created\", ' ' + String(new Date(createdAt)).split(' ').slice(1, 4).join(' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"secondary\",\n            className: classes.iconText,\n            children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), \"Admin:\", /*#__PURE__*/_jsxDEV(Link, {\n              component: RouterLink,\n              to: `/u/${admin.username}`,\n              style: {\n                marginLeft: '0.3em'\n              },\n              children: [\"u/\", admin.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.secondPanel,\n          children: [user && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            startIcon: isSubscribed ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 59\n            }, this),\n            className: classes.joinBtn,\n            onClick: handleSubJoin,\n            children: isSubscribed ? 'Subscribed' : 'Subscribe'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"primary\",\n            className: classes.iconText,\n            children: [/*#__PURE__*/_jsxDEV(GroupIcon, {\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), subscriberCount, \" subscribers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostFormModal, {\n        fromSubreddit: {\n          subredditName,\n          id\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortTabBar, {\n        sortBy: sortBy,\n        handleTabChange: handleTabChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), postsLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        text: 'Fetching community posts...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: subPage.posts.results.length !== 0 ? subPage.posts.results.map(p => /*#__PURE__*/_jsxDEV(PostCard, {\n            post: p,\n            toggleUpvote: toggleUpvote,\n            toggleDownvote: toggleDownvote\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.noPosts,\n            children: [/*#__PURE__*/_jsxDEV(PostAddIcon, {\n              color: \"primary\",\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"secondary\",\n              children: \"No Posts Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"secondary\",\n              children: [\"Be the first to post in b/\", subredditName, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), 'next' in subPage.posts && /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n          handleLoadPosts: handleLoadPosts,\n          loading: loadingMore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubPage, \"Yn7SgTh91zVSbrONHEKolLhuhUw=\", false, function () {\n  return [useSubPageStyles, useParams, useDispatch, useSelector];\n});\n\n_c = SubPage;\nexport default SubPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubPage\");","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/components/SubPage.js"],"names":["React","useState","useEffect","useParams","Link","RouterLink","useDispatch","useSelector","fetchSub","toggleUpvote","toggleDownvote","toggleSubscribe","editDescription","loadSubPosts","notify","SortTabBar","PostCard","LoadMoreButton","PostFormModal","ErrorPage","LoadingSpinner","getErrorMsg","Container","Paper","Typography","Button","TextField","useSubPageStyles","CakeIcon","PersonIcon","CheckIcon","GroupIcon","AddIcon","EditIcon","PostAddIcon","SubPage","classes","sub","dispatch","user","subPage","state","editOpen","setEditOpen","descInput","setDescInput","sortBy","setSortBy","page","setPage","loadingMore","setLoadingMore","pageLoading","setPageLoading","postsLoading","setPostsLoading","pageError","setPageError","getSub","err","subDetails","description","mainPaper","subredditName","subscribedBy","subscriberCount","admin","createdAt","id","isSubscribed","includes","handleSubJoin","updatedSubscribedBy","filter","s","message","handleEditDescription","handleTabChange","e","newValue","handleLoadPosts","prevState","subInfoWrapper","firstPanel","inputDiv","Infinity","target","value","submitBtns","cancelBtn","padding","marginLeft","iconText","marginRight","String","Date","split","slice","join","username","secondPanel","joinBtn","posts","results","length","map","p","noPosts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchSub,\r\n  toggleUpvote,\r\n  toggleDownvote,\r\n  toggleSubscribe,\r\n  editDescription,\r\n  loadSubPosts,\r\n} from '../reducers/subPageReducer';\r\nimport { notify } from '../reducers/notificationReducer';\r\nimport SortTabBar from './SortTabBar';\r\nimport PostCard from './PostCard';\r\nimport LoadMoreButton from './LoadMoreButton';\r\nimport PostFormModal from './PostFormModal';\r\nimport ErrorPage from './ErrorPage';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport getErrorMsg from '../utils/getErrorMsg';\r\n\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Link,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { useSubPageStyles } from '../styles/muiStyles';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\n\r\nconst SubPage = () => {\r\n  const classes = useSubPageStyles();\r\n  const { sub } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { user, subPage } = useSelector((state) => state);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [descInput, setDescInput] = useState('');\r\n  const [sortBy, setSortBy] = useState('hot');\r\n  const [page, setPage] = useState(1);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [postsLoading, setPostsLoading] = useState(false);\r\n  const [pageError, setPageError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getSub = async () => {\r\n      try {\r\n        await dispatch(fetchSub(sub, 'hot'));\r\n        setPageLoading(false);\r\n      } catch (err) {\r\n        setPageError(getErrorMsg(err));\r\n      }\r\n    };\r\n    getSub();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [sub]);\r\n\r\n  useEffect(() => {\r\n    if (subPage) {\r\n      setDescInput(subPage.subDetails.description);\r\n    }\r\n  }, [subPage]);\r\n\r\n  if (pageError) {\r\n    return (\r\n      <Container disableGutters>\r\n        <Paper variant=\"outlined\" className={classes.mainPaper}>\r\n          <ErrorPage errorMsg={pageError} />\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!subPage || pageLoading) {\r\n    return (\r\n      <Container disableGutters>\r\n        <Paper variant=\"outlined\" className={classes.mainPaper}>\r\n          <LoadingSpinner text={'Fetching community data...'} />\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const {\r\n    subredditName,\r\n    subscribedBy,\r\n    subscriberCount,\r\n    description,\r\n    admin,\r\n    createdAt,\r\n    id,\r\n  } = subPage.subDetails;\r\n\r\n  const isSubscribed = user && subscribedBy.includes(user.id);\r\n\r\n  const handleSubJoin = async () => {\r\n    try {\r\n      let updatedSubscribedBy = [];\r\n\r\n      if (isSubscribed) {\r\n        updatedSubscribedBy = subscribedBy.filter((s) => s !== user.id);\r\n      } else {\r\n        updatedSubscribedBy = [...subscribedBy, user.id];\r\n      }\r\n      await dispatch(toggleSubscribe(id, updatedSubscribedBy));\r\n\r\n      let message = isSubscribed\r\n        ? `Unsubscribed from r/${subredditName}`\r\n        : `Subscribed to r/${subredditName}!`;\r\n      dispatch(notify(message, 'success'));\r\n    } catch (err) {\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const handleEditDescription = async () => {\r\n    try {\r\n      await dispatch(editDescription(id, descInput));\r\n      setEditOpen(false);\r\n      dispatch(\r\n        notify(`Updated description of your sub: r/${subredditName}`, 'success')\r\n      );\r\n    } catch (err) {\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const handleTabChange = async (e, newValue) => {\r\n    try {\r\n      setPostsLoading(true);\r\n      await dispatch(fetchSub(sub, newValue));\r\n      setSortBy(newValue);\r\n      setPostsLoading(false);\r\n\r\n      if (page !== 1) {\r\n        setPage(1);\r\n      }\r\n    } catch (err) {\r\n      setPostsLoading(false);\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const handleLoadPosts = async () => {\r\n    try {\r\n      setLoadingMore(true);\r\n      await dispatch(loadSubPosts(sub, sortBy, page + 1));\r\n      setPage((prevState) => prevState + 1);\r\n      setLoadingMore(false);\r\n    } catch (err) {\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container disableGutters>\r\n      <Paper variant=\"outlined\" className={classes.mainPaper}>\r\n        <Paper variant=\"outlined\" className={classes.subInfoWrapper}>\r\n          <div className={classes.firstPanel}>\r\n            <Typography variant=\"h6\" color=\"secondary\">\r\n              b/{subredditName}\r\n            </Typography>\r\n            <div className={classes.description}>\r\n              {!editOpen ? (\r\n                <Typography variant=\"body1\">{description}</Typography>\r\n              ) : (\r\n                <div className={classes.inputDiv}>\r\n                  <TextField\r\n                    multiline\r\n                    required\r\n                    fullWidth\r\n                    rows={2}\r\n                    rowsMax={Infinity}\r\n                    value={descInput}\r\n                    onChange={(e) => setDescInput(e.target.value)}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                  <div className={classes.submitBtns}>\r\n                    <Button\r\n                      onClick={() => setEditOpen(false)}\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      className={classes.cancelBtn}\r\n                      style={{ padding: '0.2em' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleEditDescription}\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      style={{ padding: '0.2em' }}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {user && user.id === admin.id && !editOpen && (\r\n                <Button\r\n                  onClick={() => setEditOpen((prevState) => !prevState)}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={{ padding: '0.2em', marginLeft: '0.5em' }}\r\n                  startIcon={<EditIcon />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={classes.iconText}\r\n              color=\"secondary\"\r\n            >\r\n              <CakeIcon style={{ marginRight: 5 }} /> Created\r\n              {' ' +\r\n                String(new Date(createdAt)).split(' ').slice(1, 4).join(' ')}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"secondary\"\r\n              className={classes.iconText}\r\n            >\r\n              <PersonIcon style={{ marginRight: 5 }} />\r\n              Admin:\r\n              <Link\r\n                component={RouterLink}\r\n                to={`/u/${admin.username}`}\r\n                style={{ marginLeft: '0.3em' }}\r\n              >\r\n                u/{admin.username}\r\n              </Link>\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.secondPanel}>\r\n            {user && (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                startIcon={isSubscribed ? <CheckIcon /> : <AddIcon />}\r\n                className={classes.joinBtn}\r\n                onClick={handleSubJoin}\r\n              >\r\n                {isSubscribed ? 'Subscribed' : 'Subscribe'}\r\n              </Button>\r\n            )}\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"primary\"\r\n              className={classes.iconText}\r\n            >\r\n              <GroupIcon style={{ marginRight: 5 }} />\r\n              {subscriberCount} subscribers\r\n            </Typography>\r\n          </div>\r\n        </Paper>\r\n        <PostFormModal fromSubreddit={{ subredditName, id }} />\r\n        <SortTabBar sortBy={sortBy} handleTabChange={handleTabChange} />\r\n        {postsLoading ? (\r\n          <LoadingSpinner text={'Fetching community posts...'} />\r\n        ) : (\r\n          <>\r\n            <div>\r\n              {subPage.posts.results.length !== 0 ? (\r\n                subPage.posts.results.map((p) => (\r\n                  <PostCard\r\n                    key={p.id}\r\n                    post={p}\r\n                    toggleUpvote={toggleUpvote}\r\n                    toggleDownvote={toggleDownvote}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div className={classes.noPosts}>\r\n                  <PostAddIcon color=\"primary\" fontSize=\"large\" />\r\n                  <Typography variant=\"h5\" color=\"secondary\">\r\n                    No Posts Yet\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary\">\r\n                    Be the first to post in b/{subredditName}!\r\n                  </Typography>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {'next' in subPage.posts && (\r\n              <LoadMoreButton\r\n                handleLoadPosts={handleLoadPosts}\r\n                loading={loadingMore}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SubPage;\r\n"]},"metadata":{},"sourceType":"module"}