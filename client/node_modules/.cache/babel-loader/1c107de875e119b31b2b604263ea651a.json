{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\bloom_app\\\\client\\\\src\\\\components\\\\DarkModeMenuItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleDarkMode } from '../reducers/themeReducer';\nimport { MenuItem, ListItemIcon, IconButton } from '@material-ui/core';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DarkModeMenuItem = _ref => {\n  _s();\n\n  let {\n    closeMenu,\n    navItem\n  } = _ref;\n  const {\n    darkMode\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const handleDarkMode = () => {\n    dispatch(toggleDarkMode(!darkMode));\n    closeMenu();\n  };\n\n  if (navItem) {\n    return /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: handleDarkMode,\n      children: darkMode ? /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    onClick: handleDarkMode,\n    children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n      children: [darkMode ? /*#__PURE__*/_jsxDEV(Brightness4Icon, {\n        style: {\n          marginRight: 7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness7Icon, {\n        style: {\n          marginRight: 7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), \"Dark Mode: \", darkMode ? ' ON' : ' OFF']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DarkModeMenuItem, \"gU9NCCxxmJ07TggCyI6x1tHBUv8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DarkModeMenuItem;\nexport default DarkModeMenuItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkModeMenuItem\");","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/components/DarkModeMenuItem.js"],"names":["React","useSelector","useDispatch","toggleDarkMode","MenuItem","ListItemIcon","IconButton","Brightness4Icon","Brightness7Icon","DarkModeMenuItem","closeMenu","navItem","darkMode","state","dispatch","handleDarkMode","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEA,MAAMC,gBAAgB,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA2B;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAeX,WAAW,CAAEY,KAAD,IAAWA,KAAZ,CAAhC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,cAAc,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAACX,cAAc,CAAC,CAACS,QAAF,CAAf,CAAR;AACAF,IAAAA,SAAS;AACV,GAHD;;AAKA,MAAIC,OAAJ,EAAa;AACX,wBACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEI,cAArC;AAAA,gBACGH,QAAQ,gBAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAyB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADpC;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEG,cAAnB;AAAA,2BACE,QAAC,YAAD;AAAA,iBACGH,QAAQ,gBACP,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAE;AAAEI,UAAAA,WAAW,EAAE;AAAf;AAAxB;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAE;AAAEA,UAAAA,WAAW,EAAE;AAAf;AAAxB;AAAA;AAAA;AAAA;AAAA,cAJJ,iBAMcJ,QAAQ,GAAG,KAAH,GAAW,MANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7BD;;GAAMH,gB;UACiBR,W,EACJC,W;;;KAFbO,gB;AA+BN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleDarkMode } from '../reducers/themeReducer';\r\n\r\nimport { MenuItem, ListItemIcon, IconButton } from '@material-ui/core';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nconst DarkModeMenuItem = ({ closeMenu, navItem }) => {\r\n  const { darkMode } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDarkMode = () => {\r\n    dispatch(toggleDarkMode(!darkMode));\r\n    closeMenu();\r\n  };\r\n\r\n  if (navItem) {\r\n    return (\r\n      <IconButton color=\"primary\" onClick={handleDarkMode}>\r\n        {darkMode ? <Brightness4Icon /> : <Brightness7Icon />}\r\n      </IconButton>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MenuItem onClick={handleDarkMode}>\r\n      <ListItemIcon>\r\n        {darkMode ? (\r\n          <Brightness4Icon style={{ marginRight: 7 }} />\r\n        ) : (\r\n          <Brightness7Icon style={{ marginRight: 7 }} />\r\n        )}\r\n        Dark Mode: {darkMode ? ' ON' : ' OFF'}\r\n      </ListItemIcon>\r\n    </MenuItem>\r\n  );\r\n};\r\n\r\nexport default DarkModeMenuItem;\r\n"]},"metadata":{},"sourceType":"module"}