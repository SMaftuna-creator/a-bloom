{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\clnblm\\\\a-bloom\\\\client\\\\src\\\\components\\\\CommentAndButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addReply, editComment, deleteComment } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport DeleteDialog from './DeleteDialog';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useCommentAndBtnsStyles } from '../styles/muiStyles';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentAndButtons = _ref => {\n  _s();\n\n  let {\n    isMobile,\n    comment,\n    postId,\n    user\n  } = _ref;\n  const classes = useCommentAndBtnsStyles();\n  const dispatch = useDispatch();\n  const [replyOpen, setReplyOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [replyInput, setReplyInput] = useState('');\n  const [editInput, setEditInput] = useState(comment.commentBody);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handlePostReply = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(addReply(postId, comment.id, replyInput));\n      setSubmitting(false);\n      setReplyOpen(false);\n      setReplyInput('');\n      dispatch(notify(`Reply submitted!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleEditComment = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(editComment(postId, comment.id, editInput));\n      setSubmitting(false);\n      setEditOpen(false);\n      dispatch(notify(`Comment edited!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleCommentDelete = async () => {\n    try {\n      await dispatch(deleteComment(postId, comment.id));\n      dispatch(notify(`Comment deleted!`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!editOpen ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: comment.commentBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputDiv,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        multiline: true,\n        fullWidth: true,\n        rows: 2,\n        rowsMax: Infinity,\n        value: editInput,\n        onChange: e => setEditInput(e.target.value),\n        variant: \"outlined\",\n        size: isMobile ? 'small' : 'medium'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitBtns,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditOpen(false),\n          color: \"primary\",\n          variant: \"outlined\",\n          size: \"small\",\n          className: classes.cancelBtn,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditComment,\n          color: \"primary\",\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 26\n          }, this),\n          size: \"small\",\n          disabled: submitting,\n          children: submitting ? 'Updating' : 'Update'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btnBar,\n      children: [user && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"inherit\",\n        startIcon: /*#__PURE__*/_jsxDEV(ReplyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 24\n        }, this),\n        className: classes.btnStyle,\n        onClick: () => setReplyOpen(prevState => !prevState),\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), user && user.id === comment.commentedBy.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"inherit\",\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 26\n          }, this),\n          className: classes.btnStyle,\n          onClick: () => setEditOpen(prevState => !prevState),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n          type: \"comment\",\n          handleDelete: handleCommentDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), replyOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputDiv,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: `Reply to ${comment.commentedBy.username}'s comment`,\n        multiline: true,\n        required: true,\n        fullWidth: true,\n        rows: 4,\n        rowsMax: Infinity,\n        value: replyInput,\n        onChange: e => setReplyInput(e.target.value),\n        variant: \"outlined\",\n        size: isMobile ? 'small' : 'medium'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitBtns,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setReplyOpen(false),\n          color: \"primary\",\n          variant: \"outlined\",\n          size: \"small\",\n          className: classes.cancelBtn,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePostReply,\n          color: \"primary\",\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 26\n          }, this),\n          size: \"small\",\n          disabled: submitting,\n          children: submitting ? 'Replying' : 'Reply'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentAndButtons, \"5rP07Cr1uvefwJXGWjr8TRyHD18=\", false, function () {\n  return [useCommentAndBtnsStyles, useDispatch];\n});\n\n_c = CommentAndButtons;\nexport default CommentAndButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentAndButtons\");","map":{"version":3,"sources":["C:/Users/1/Desktop/clnblm/a-bloom/client/src/components/CommentAndButtons.js"],"names":["React","useState","useDispatch","addReply","editComment","deleteComment","notify","DeleteDialog","getErrorMsg","TextField","Button","Typography","useCommentAndBtnsStyles","ReplyIcon","SendIcon","EditIcon","CommentAndButtons","isMobile","comment","postId","user","classes","dispatch","replyOpen","setReplyOpen","editOpen","setEditOpen","replyInput","setReplyInput","editInput","setEditInput","commentBody","submitting","setSubmitting","handlePostReply","id","err","handleEditComment","handleCommentDelete","inputDiv","Infinity","e","target","value","submitBtns","cancelBtn","btnBar","btnStyle","prevState","commentedBy","username"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  addReply,\r\n  editComment,\r\n  deleteComment,\r\n} from '../reducers/postCommentsReducer';\r\nimport { notify } from '../reducers/notificationReducer';\r\nimport DeleteDialog from './DeleteDialog';\r\nimport getErrorMsg from '../utils/getErrorMsg';\r\n\r\nimport { TextField, Button, Typography } from '@material-ui/core';\r\nimport { useCommentAndBtnsStyles } from '../styles/muiStyles';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst CommentAndButtons = ({ isMobile, comment, postId, user }) => {\r\n  const classes = useCommentAndBtnsStyles();\r\n  const dispatch = useDispatch();\r\n  const [replyOpen, setReplyOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [replyInput, setReplyInput] = useState('');\r\n  const [editInput, setEditInput] = useState(comment.commentBody);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const handlePostReply = async () => {\r\n    try {\r\n      setSubmitting(true);\r\n      await dispatch(addReply(postId, comment.id, replyInput));\r\n      setSubmitting(false);\r\n      setReplyOpen(false);\r\n      setReplyInput('');\r\n      dispatch(notify(`Reply submitted!`, 'success'));\r\n    } catch (err) {\r\n      setSubmitting(false);\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const handleEditComment = async () => {\r\n    try {\r\n      setSubmitting(true);\r\n      await dispatch(editComment(postId, comment.id, editInput));\r\n      setSubmitting(false);\r\n      setEditOpen(false);\r\n      dispatch(notify(`Comment edited!`, 'success'));\r\n    } catch (err) {\r\n      setSubmitting(false);\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const handleCommentDelete = async () => {\r\n    try {\r\n      await dispatch(deleteComment(postId, comment.id));\r\n      dispatch(notify(`Comment deleted!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editOpen ? (\r\n        <Typography variant=\"body2\">{comment.commentBody}</Typography>\r\n      ) : (\r\n        <div className={classes.inputDiv}>\r\n          <TextField\r\n            multiline\r\n            fullWidth\r\n            rows={2}\r\n            rowsMax={Infinity}\r\n            value={editInput}\r\n            onChange={(e) => setEditInput(e.target.value)}\r\n            variant=\"outlined\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n          <div className={classes.submitBtns}>\r\n            <Button\r\n              onClick={() => setEditOpen(false)}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.cancelBtn}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleEditComment}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              startIcon={<SendIcon />}\r\n              size=\"small\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? 'Updating' : 'Update'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className={classes.btnBar}>\r\n        {user && (\r\n          <Button\r\n            size=\"small\"\r\n            color=\"inherit\"\r\n            startIcon={<ReplyIcon />}\r\n            className={classes.btnStyle}\r\n            onClick={() => setReplyOpen((prevState) => !prevState)}\r\n          >\r\n            Reply\r\n          </Button>\r\n        )}\r\n        {user && user.id === comment.commentedBy.id && (\r\n          <>\r\n            <Button\r\n              size=\"small\"\r\n              color=\"inherit\"\r\n              startIcon={<EditIcon />}\r\n              className={classes.btnStyle}\r\n              onClick={() => setEditOpen((prevState) => !prevState)}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <DeleteDialog type=\"comment\" handleDelete={handleCommentDelete} />\r\n          </>\r\n        )}\r\n      </div>\r\n      {replyOpen && (\r\n        <div className={classes.inputDiv}>\r\n          <TextField\r\n            placeholder={`Reply to ${comment.commentedBy.username}'s comment`}\r\n            multiline\r\n            required\r\n            fullWidth\r\n            rows={4}\r\n            rowsMax={Infinity}\r\n            value={replyInput}\r\n            onChange={(e) => setReplyInput(e.target.value)}\r\n            variant=\"outlined\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n          <div className={classes.submitBtns}>\r\n            <Button\r\n              onClick={() => setReplyOpen(false)}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.cancelBtn}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handlePostReply}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              startIcon={<SendIcon />}\r\n              size=\"small\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? 'Replying' : 'Reply'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentAndButtons;\r\n"]},"metadata":{},"sourceType":"module"}