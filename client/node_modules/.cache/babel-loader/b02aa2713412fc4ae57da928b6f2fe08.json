{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\clnblm\\\\a-bloom\\\\client\\\\src\\\\components\\\\SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSearchResults, toggleUpvote, toggleDownvote, loadSearchPosts } from '../reducers/searchReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport PostCard from './PostCard';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport { useSearchPageStyles } from '../styles/muiStyles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResults = () => {\n  _s();\n\n  const classes = useSearchPageStyles();\n  const {\n    query\n  } = useParams();\n  const dispatch = useDispatch();\n  const searchResults = useSelector(state => state.search);\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  useEffect(() => {\n    const getSearchResults = async () => {\n      try {\n        setPageLoading(true);\n        await dispatch(setSearchResults(query));\n        setPageLoading(false);\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n\n    getSearchResults();\n    setPage(1); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  if (!searchResults || pageLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.mainPaper,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          text: 'Searching for matches...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadSearchPosts(query, page + 1));\n      setPage(prevState => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    disableGutters: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.mainPaper,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"secondary\",\n          className: classes.infoPaper,\n          children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"large\",\n            style: {\n              marginRight: '7px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), \"Showing search results for \\\"\", query, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), searchResults.results.length !== 0 ? searchResults.results.map(s => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: s,\n        toggleUpvote: toggleUpvote,\n        toggleDownvote: toggleDownvote\n      }, s.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: classes.noResults,\n        children: [/*#__PURE__*/_jsxDEV(SentimentVeryDissatisfiedIcon, {\n          className: classes.sorryIcon,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), \"Sorry, there were no post results for \\\"\", query, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), 'next' in searchResults && /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n        handleLoadPosts: handleLoadPosts,\n        loading: loadingMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResults, \"1+EzdZn6aX2I5i+gR9CXg/QmiXY=\", false, function () {\n  return [useSearchPageStyles, useParams, useDispatch, useSelector];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["C:/Users/1/Desktop/clnblm/a-bloom/client/src/components/SearchResults.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","setSearchResults","toggleUpvote","toggleDownvote","loadSearchPosts","notify","PostCard","LoadMoreButton","LoadingSpinner","getErrorMsg","Container","Paper","Typography","useSearchPageStyles","SearchIcon","SentimentVeryDissatisfiedIcon","SearchResults","classes","query","dispatch","searchResults","state","search","page","setPage","loadingMore","setLoadingMore","pageLoading","setPageLoading","getSearchResults","err","mainPaper","handleLoadPosts","prevState","infoPaper","marginRight","results","length","map","s","id","noResults","sorryIcon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setSearchResults,\r\n  toggleUpvote,\r\n  toggleDownvote,\r\n  loadSearchPosts,\r\n} from '../reducers/searchReducer';\r\nimport { notify } from '../reducers/notificationReducer';\r\nimport PostCard from './PostCard';\r\nimport LoadMoreButton from './LoadMoreButton';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport getErrorMsg from '../utils/getErrorMsg';\r\n\r\nimport { Container, Paper, Typography } from '@material-ui/core';\r\nimport { useSearchPageStyles } from '../styles/muiStyles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\n\r\nconst SearchResults = () => {\r\n  const classes = useSearchPageStyles();\r\n  const { query } = useParams();\r\n  const dispatch = useDispatch();\r\n  const searchResults = useSelector((state) => state.search);\r\n  const [page, setPage] = useState(1);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getSearchResults = async () => {\r\n      try {\r\n        setPageLoading(true);\r\n        await dispatch(setSearchResults(query));\r\n        setPageLoading(false);\r\n      } catch (err) {\r\n        dispatch(notify(getErrorMsg(err), 'error'));\r\n      }\r\n    };\r\n    getSearchResults();\r\n    setPage(1);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [query]);\r\n\r\n  if (!searchResults || pageLoading) {\r\n    return (\r\n      <Container disableGutters>\r\n        <Paper variant=\"outlined\" className={classes.mainPaper}>\r\n          <LoadingSpinner text={'Searching for matches...'} />\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const handleLoadPosts = async () => {\r\n    try {\r\n      setLoadingMore(true);\r\n      await dispatch(loadSearchPosts(query, page + 1));\r\n      setPage((prevState) => prevState + 1);\r\n      setLoadingMore(false);\r\n    } catch (err) {\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container disableGutters>\r\n      <Paper variant=\"outlined\" className={classes.mainPaper}>\r\n        <Paper variant=\"outlined\">\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"secondary\"\r\n            className={classes.infoPaper}\r\n          >\r\n            <SearchIcon fontSize=\"large\" style={{ marginRight: '7px' }} />\r\n            Showing search results for \"{query}\"\r\n          </Typography>\r\n        </Paper>\r\n        {searchResults.results.length !== 0 ? (\r\n          searchResults.results.map((s) => (\r\n            <PostCard\r\n              key={s.id}\r\n              post={s}\r\n              toggleUpvote={toggleUpvote}\r\n              toggleDownvote={toggleDownvote}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" className={classes.noResults}>\r\n            <SentimentVeryDissatisfiedIcon\r\n              className={classes.sorryIcon}\r\n              color=\"primary\"\r\n            />\r\n            Sorry, there were no post results for \"{query}\"\r\n          </Typography>\r\n        )}\r\n        {'next' in searchResults && (\r\n          <LoadMoreButton\r\n            handleLoadPosts={handleLoadPosts}\r\n            loading={loadingMore}\r\n          />\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"]},"metadata":{},"sourceType":"module"}