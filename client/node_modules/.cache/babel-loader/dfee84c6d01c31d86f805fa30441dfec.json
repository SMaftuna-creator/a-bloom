{"ast":null,"code":"import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register'; // all realtime timer\n\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\n\nvar clear = function (tid) {\n  clearTimeout(tid);\n  delete TIMER_POOL[tid];\n}; // run with timer(setTimeout)\n\n\nfunction run(node, date, localeFunc, opts) {\n  // clear the node's exist timer\n  clear(getTimerId(node));\n  var relativeDate = opts.relativeDate,\n      minInterval = opts.minInterval; // get diff seconds\n\n  var diff = diffSec(date, relativeDate); // render\n\n  node.innerText = formatDiff(diff, localeFunc);\n  var tid = setTimeout(function () {\n    run(node, date, localeFunc, opts);\n  }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff)); // there is no need to save node in object. Just save the key\n\n  TIMER_POOL[tid] = 0;\n  setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\n\n\nexport function cancel(node) {\n  // cancel one\n  if (node) clear(getTimerId(node)); // cancel all\n  // @ts-ignore\n  else Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\n\nexport function render(nodes, locale, opts) {\n  // by .length\n  // @ts-ignore\n  var nodeList = nodes.length ? nodes : [nodes];\n  nodeList.forEach(function (node) {\n    run(node, getDateAttribute(node), getLocale(locale), opts || {});\n  });\n  return nodeList;\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,gBAAjC,QAAyD,aAAzD;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,YAA9B,QAAkD,cAAlD;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CAGA;;AACA,IAAMC,UAAU,GAAc,EAA9B;AAEA;;;;;AAIA,IAAMC,KAAK,GAAG,UAACC,GAAD,EAAY;AACxBC,cAAY,CAACD,GAAD,CAAZ;AACA,SAAOF,UAAU,CAACE,GAAD,CAAjB;AACD,CAHD,C,CAKA;;;AACA,SAASE,GAAT,CAAaC,IAAb,EAAgCC,IAAhC,EAA8CC,UAA9C,EAAsEC,IAAtE,EAAgF;AAC9E;AACAP,OAAK,CAACP,UAAU,CAACW,IAAD,CAAX,CAAL;AAEQ;AAAA,MAAcI,8BAAd,CAJsE,CAM9E;;AACA,MAAMC,IAAI,GAAGb,OAAO,CAACS,IAAD,EAAOK,YAAP,CAApB,CAP8E,CAQ9E;;AACAN,MAAI,CAACO,SAAL,GAAiBhB,UAAU,CAACc,IAAD,EAAOH,UAAP,CAA3B;AAEA,MAAML,GAAG,GAAIW,UAAU,CAAC;AACtBT,OAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,UAAb,EAAyBC,IAAzB,CAAH;AACD,GAFsB,EAEpBM,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASlB,YAAY,CAACY,IAAD,CAArB,EAA6BD,WAAW,IAAI,CAA5C,IAAiD,IAA1D,EAAgE,UAAhE,CAFoB,CAAvB,CAX8E,CAe9E;;AACAT,YAAU,CAACE,GAAD,CAAV,GAAkB,CAAlB;AACAT,YAAU,CAACY,IAAD,EAAOH,GAAP,CAAV;AACD;AAED;;;;;;AAIA,OAAM,SAAUe,MAAV,CAAiBZ,IAAjB,EAAmC;AACvC;AACA,MAAIA,IAAJ,EAAUJ,KAAK,CAACP,UAAU,CAACW,IAAD,CAAX,CAAL,CAAV,CACA;AACA;AAFA,OAGKa,MAAM,CAACC,IAAP,CAAYnB,UAAZ,EAAwBoB,OAAxB,CAAgCnB,KAAhC;AACN;AAED;;;;;;;AAMA,OAAM,SAAUoB,MAAV,CAAiBC,KAAjB,EAAgEC,MAAhE,EAAiFf,IAAjF,EAA4F;AAChG;AACA;AACA,MAAMgB,QAAQ,GAAkBF,KAAK,CAACG,MAAN,GAAeH,KAAf,GAAuB,CAACA,KAAD,CAAvD;AAEAE,UAAQ,CAACJ,OAAT,CAAiB,UAACf,IAAD,EAAkB;AACjCD,OAAG,CAACC,IAAD,EAAOV,gBAAgB,CAACU,IAAD,CAAvB,EAA+BN,SAAS,CAACwB,MAAD,CAAxC,EAAkDf,IAAI,IAAI,EAA1D,CAAH;AACD,GAFD;AAIA,SAAOgB,QAAP;AACD","names":["setTimerId","getTimerId","getDateAttribute","formatDiff","diffSec","nextInterval","getLocale","TIMER_POOL","clear","tid","clearTimeout","run","node","date","localeFunc","opts","minInterval","diff","relativeDate","innerText","setTimeout","Math","min","max","cancel","Object","keys","forEach","render","nodes","locale","nodeList","length"],"sources":["../src/realtime.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}