{"ast":null,"code":"import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { token } from './auth';\nconst baseUrl = `${backendUrl}/api/posts`;\n\nconst setConfig = () => {\n  return {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n};\n\nconst getPosts = async (sortBy, limit, page) => {\n  const response = await axios.get(`${baseUrl}/?sortby=${sortBy}&limit=${limit}&page=${page}`);\n  return response.data;\n};\n\nconst getSubPosts = async (limit, page) => {\n  const response = await axios.get(`${baseUrl}/subscribed/?limit=${limit}&page=${page}`, setConfig());\n  return response.data;\n};\n\nconst getSearchResults = async (query, limit, page) => {\n  const response = await axios.get(`${baseUrl}/search/?query=${query}&limit=${limit}&page=${page}`);\n  return response.data;\n};\n\nconst addNew = async postObj => {\n  const response = await axios.post(`${baseUrl}`, postObj, setConfig());\n  return response.data;\n};\n\nconst editPost = async (id, postObj) => {\n  const response = await axios.patch(`${baseUrl}/${id}`, postObj, setConfig());\n  return response.data;\n};\n\nconst getPostComments = async id => {\n  const response = await axios.get(`${baseUrl}/${id}/comments`);\n  return response.data;\n};\n\nconst upvotePost = async id => {\n  const response = await axios.post(`${baseUrl}/${id}/upvote`, null, setConfig());\n  return response.data;\n};\n\nconst downvotePost = async id => {\n  const response = await axios.post(`${baseUrl}/${id}/downvote`, null, setConfig());\n  return response.data;\n};\n\nconst deletePost = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`, setConfig());\n  return response.data;\n};\n\nconst upvoteComment = async (postId, commentId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/upvote`, null, setConfig());\n  return response.data;\n};\n\nconst downvoteComment = async (postId, commentId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/downvote`, null, setConfig());\n  return response.data;\n};\n\nconst upvoteReply = async (postId, commentId, replyId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/upvote`, null, setConfig());\n  return response.data;\n};\n\nconst downvoteReply = async (postId, commentId, replyId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/downvote`, null, setConfig());\n  return response.data;\n};\n\nconst postComment = async (postId, commentObj) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment`, commentObj, setConfig());\n  return response.data;\n};\n\nconst postReply = async (postId, commentId, replyObj) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/reply`, replyObj, setConfig());\n  return response.data;\n};\n\nconst updateComment = async (postId, commentId, commentObj) => {\n  const response = await axios.patch(`${baseUrl}/${postId}/comment/${commentId}`, commentObj, setConfig());\n  return response.data;\n};\n\nconst removeComment = async (postId, commentId) => {\n  const response = await axios.delete(`${baseUrl}/${postId}/comment/${commentId}`, setConfig());\n  return response.data;\n};\n\nconst updateReply = async (postId, commentId, replyId, replyObj) => {\n  const response = await axios.patch(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`, replyObj, setConfig());\n  return response.data;\n};\n\nconst removeReply = async (postId, commentId, replyId) => {\n  const response = await axios.delete(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`, setConfig());\n  return response.data;\n};\n\nconst postService = {\n  getPosts,\n  getSubPosts,\n  getSearchResults,\n  addNew,\n  editPost,\n  getPostComments,\n  upvotePost,\n  downvotePost,\n  deletePost,\n  upvoteComment,\n  downvoteComment,\n  upvoteReply,\n  downvoteReply,\n  postComment,\n  postReply,\n  updateComment,\n  removeComment,\n  updateReply,\n  removeReply\n};\nexport default postService;","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/services/posts.js"],"names":["axios","backendUrl","token","baseUrl","setConfig","headers","getPosts","sortBy","limit","page","response","get","data","getSubPosts","getSearchResults","query","addNew","postObj","post","editPost","id","patch","getPostComments","upvotePost","downvotePost","deletePost","delete","upvoteComment","postId","commentId","downvoteComment","upvoteReply","replyId","downvoteReply","postComment","commentObj","postReply","replyObj","updateComment","removeComment","updateReply","removeReply","postService"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\nimport { token } from './auth';\r\n\r\nconst baseUrl = `${backendUrl}/api/posts`;\r\n\r\nconst setConfig = () => {\r\n  return {\r\n    headers: { 'x-auth-token': token },\r\n  };\r\n};\r\n\r\nconst getPosts = async (sortBy, limit, page) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}/?sortby=${sortBy}&limit=${limit}&page=${page}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst getSubPosts = async (limit, page) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}/subscribed/?limit=${limit}&page=${page}`,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst getSearchResults = async (query, limit, page) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}/search/?query=${query}&limit=${limit}&page=${page}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst addNew = async (postObj) => {\r\n  const response = await axios.post(`${baseUrl}`, postObj, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst editPost = async (id, postObj) => {\r\n  const response = await axios.patch(`${baseUrl}/${id}`, postObj, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst getPostComments = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}/comments`);\r\n  return response.data;\r\n};\r\n\r\nconst upvotePost = async (id) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${id}/upvote`,\r\n    null,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst downvotePost = async (id) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${id}/downvote`,\r\n    null,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst deletePost = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst upvoteComment = async (postId, commentId) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${postId}/comment/${commentId}/upvote`,\r\n    null,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst downvoteComment = async (postId, commentId) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${postId}/comment/${commentId}/downvote`,\r\n    null,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst upvoteReply = async (postId, commentId, replyId) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/upvote`,\r\n    null,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst downvoteReply = async (postId, commentId, replyId) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/downvote`,\r\n    null,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst postComment = async (postId, commentObj) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${postId}/comment`,\r\n    commentObj,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst postReply = async (postId, commentId, replyObj) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/${postId}/comment/${commentId}/reply`,\r\n    replyObj,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst updateComment = async (postId, commentId, commentObj) => {\r\n  const response = await axios.patch(\r\n    `${baseUrl}/${postId}/comment/${commentId}`,\r\n    commentObj,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst removeComment = async (postId, commentId) => {\r\n  const response = await axios.delete(\r\n    `${baseUrl}/${postId}/comment/${commentId}`,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst updateReply = async (postId, commentId, replyId, replyObj) => {\r\n  const response = await axios.patch(\r\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`,\r\n    replyObj,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst removeReply = async (postId, commentId, replyId) => {\r\n  const response = await axios.delete(\r\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`,\r\n    setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst postService = {\r\n  getPosts,\r\n  getSubPosts,\r\n  getSearchResults,\r\n  addNew,\r\n  editPost,\r\n  getPostComments,\r\n  upvotePost,\r\n  downvotePost,\r\n  deletePost,\r\n  upvoteComment,\r\n  downvoteComment,\r\n  upvoteReply,\r\n  downvoteReply,\r\n  postComment,\r\n  postReply,\r\n  updateComment,\r\n  removeComment,\r\n  updateReply,\r\n  removeReply,\r\n};\r\n\r\nexport default postService;\r\n"]},"metadata":{},"sourceType":"module"}