{"ast":null,"code":"var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n/**\r\n * The opposite of `_.mapValues`; this method creates an object with the\r\n * same values as `object` and keys generated by running each own enumerable\r\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\r\n * with three arguments: (value, key, object).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns the new mapped object.\r\n * @see _.mapValues\r\n * @example\r\n *\r\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\r\n *   return key + value;\r\n * });\r\n * // => { 'a1': 1, 'b2': 2 }\r\n */\n\n\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n  baseForOwn(object, function (value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/node_modules/lodash/mapKeys.js"],"names":["baseAssignValue","require","baseForOwn","baseIteratee","mapKeys","object","iteratee","result","value","key","module","exports"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA7B;AAAA,IACIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CADxB;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAAC,iBAAD,CAF1B;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,OAAT,CAAiBC,MAAjB,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,QAAQ,GAAGH,YAAY,CAACG,QAAD,EAAW,CAAX,CAAvB;AAEAJ,EAAAA,UAAU,CAACG,MAAD,EAAS,UAASG,KAAT,EAAgBC,GAAhB,EAAqBJ,MAArB,EAA6B;AAC9CL,IAAAA,eAAe,CAACO,MAAD,EAASD,QAAQ,CAACE,KAAD,EAAQC,GAAR,EAAaJ,MAAb,CAAjB,EAAuCG,KAAvC,CAAf;AACD,GAFS,CAAV;AAGA,SAAOD,MAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBP,OAAjB","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\r\n    baseForOwn = require('./_baseForOwn'),\r\n    baseIteratee = require('./_baseIteratee');\r\n\r\n/**\r\n * The opposite of `_.mapValues`; this method creates an object with the\r\n * same values as `object` and keys generated by running each own enumerable\r\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\r\n * with three arguments: (value, key, object).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns the new mapped object.\r\n * @see _.mapValues\r\n * @example\r\n *\r\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\r\n *   return key + value;\r\n * });\r\n * // => { 'a1': 1, 'b2': 2 }\r\n */\r\nfunction mapKeys(object, iteratee) {\r\n  var result = {};\r\n  iteratee = baseIteratee(iteratee, 3);\r\n\r\n  baseForOwn(object, function(value, key, object) {\r\n    baseAssignValue(result, iteratee(value, key, object), value);\r\n  });\r\n  return result;\r\n}\r\n\r\nmodule.exports = mapKeys;\r\n"]},"metadata":{},"sourceType":"script"}