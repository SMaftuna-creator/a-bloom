{"ast":null,"code":"import authService from '../services/auth';\nimport userService from '../services/user';\nimport storageService from '../utils/localStorage';\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGIN':\n      return action.payload;\n\n    case 'SIGNUP':\n      return action.payload;\n\n    case 'LOGOUT':\n      return null;\n\n    case 'SET_USER':\n      return action.payload;\n\n    case 'SET_AVATAR':\n      return { ...state,\n        ...action.payload\n      };\n\n    case 'REMOVE_AVATAR':\n      return { ...state,\n        avatar: {\n          exists: false\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const loginUser = credentials => {\n  return async dispatch => {\n    const user = await authService.login(credentials);\n    storageService.saveUser(user);\n    authService.setToken(user.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: user\n    });\n  };\n};\nexport const signupUser = credentials => {\n  return async dispatch => {\n    const user = await authService.signup(credentials);\n    storageService.saveUser(user);\n    authService.setToken(user.token);\n    dispatch({\n      type: 'SIGNUP',\n      payload: user\n    });\n  };\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    storageService.logoutUser();\n    authService.setToken(null);\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n};\nexport const setUser = () => {\n  return dispatch => {\n    const loggedUser = storageService.loadUser();\n\n    if (loggedUser) {\n      authService.setToken(loggedUser.token);\n      dispatch({\n        type: 'SET_USER',\n        payload: loggedUser\n      });\n    }\n  };\n};\nexport const setAvatar = avatarImage => {\n  return async dispatch => {\n    const uploadedAvatar = await userService.uploadAvatar({\n      avatarImage\n    });\n    const prevUserData = storageService.loadUser();\n    storageService.saveUser({ ...prevUserData,\n      ...uploadedAvatar\n    });\n    dispatch({\n      type: 'SET_AVATAR',\n      payload: uploadedAvatar\n    });\n  };\n};\nexport const deleteAvatar = () => {\n  return async dispatch => {\n    await userService.removeAvatar();\n    const prevUserData = storageService.loadUser();\n    storageService.saveUser({ ...prevUserData,\n      avatar: {\n        exists: false\n      }\n    });\n    dispatch({\n      type: 'REMOVE_AVATAR'\n    });\n  };\n};\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/reducers/userReducer.js"],"names":["authService","userService","storageService","userReducer","state","action","type","payload","avatar","exists","loginUser","credentials","dispatch","user","login","saveUser","setToken","token","signupUser","signup","logoutUser","setUser","loggedUser","loadUser","setAvatar","avatarImage","uploadedAvatar","uploadAvatar","prevUserData","deleteAvatar","removeAvatar"],"mappings":"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","sourcesContent":["import authService from '../services/auth';\r\nimport userService from '../services/user';\r\nimport storageService from '../utils/localStorage';\r\n\r\nconst userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return action.payload;\r\n    case 'SIGNUP':\r\n      return action.payload;\r\n    case 'LOGOUT':\r\n      return null;\r\n    case 'SET_USER':\r\n      return action.payload;\r\n    case 'SET_AVATAR':\r\n      return { ...state, ...action.payload };\r\n    case 'REMOVE_AVATAR':\r\n      return { ...state, avatar: { exists: false } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const loginUser = (credentials) => {\r\n  return async (dispatch) => {\r\n    const user = await authService.login(credentials);\r\n    storageService.saveUser(user);\r\n    authService.setToken(user.token);\r\n\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      payload: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const signupUser = (credentials) => {\r\n  return async (dispatch) => {\r\n    const user = await authService.signup(credentials);\r\n    storageService.saveUser(user);\r\n    authService.setToken(user.token);\r\n\r\n    dispatch({\r\n      type: 'SIGNUP',\r\n      payload: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return (dispatch) => {\r\n    storageService.logoutUser();\r\n    authService.setToken(null);\r\n\r\n    dispatch({\r\n      type: 'LOGOUT',\r\n    });\r\n  };\r\n};\r\n\r\nexport const setUser = () => {\r\n  return (dispatch) => {\r\n    const loggedUser = storageService.loadUser();\r\n\r\n    if (loggedUser) {\r\n      authService.setToken(loggedUser.token);\r\n\r\n      dispatch({\r\n        type: 'SET_USER',\r\n        payload: loggedUser,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setAvatar = (avatarImage) => {\r\n  return async (dispatch) => {\r\n    const uploadedAvatar = await userService.uploadAvatar({ avatarImage });\r\n    const prevUserData = storageService.loadUser();\r\n    storageService.saveUser({ ...prevUserData, ...uploadedAvatar });\r\n\r\n    dispatch({\r\n      type: 'SET_AVATAR',\r\n      payload: uploadedAvatar,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteAvatar = () => {\r\n  return async (dispatch) => {\r\n    await userService.removeAvatar();\r\n    const prevUserData = storageService.loadUser();\r\n    storageService.saveUser({ ...prevUserData, avatar: { exists: false } });\r\n\r\n    dispatch({\r\n      type: 'REMOVE_AVATAR',\r\n    });\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}