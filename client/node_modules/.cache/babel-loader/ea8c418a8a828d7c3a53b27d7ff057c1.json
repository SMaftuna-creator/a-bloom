{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\bloom_app\\\\client\\\\src\\\\components\\\\PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPosts, loadMorePosts, toggleUpvote, toggleDownvote } from '../reducers/postReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport PostCard from './PostCard';\nimport SortTabBar from './SortTabBar';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Typography } from '@material-ui/core';\nimport { usePostListStyles } from '../styles/muiStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const [sortBy, setSortBy] = useState('hot');\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(false);\n  const posts = useSelector(state => state.posts);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const classes = usePostListStyles();\n\n  const handleTabChange = async (e, newValue) => {\n    try {\n      setPageLoading(true);\n      await dispatch(fetchPosts(newValue));\n      setSortBy(newValue);\n      setPageLoading(false);\n\n      if (page !== 1) {\n        setPage(1);\n      }\n    } catch (err) {\n      setPageLoading(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadMorePosts(sortBy, page + 1));\n      setPage(prevState => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      setLoadingMore(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(SortTabBar, {\n      sortBy: sortBy,\n      handleTabChange: handleTabChange,\n      subscribedTab: true,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), posts && posts.results && !pageLoading ? posts.results.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post,\n      toggleUpvote: toggleUpvote,\n      toggleDownvote: toggleDownvote\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      text: 'Fetching posts. Wait a sec.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), sortBy === 'subscribed' && posts.results.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.noSubscribedPosts,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"secondary\",\n        children: \"No Posts Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"secondary\",\n        children: \"Subscribe to more subs if you haven't!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), posts && 'next' in posts && !pageLoading && /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n      handleLoadPosts: handleLoadPosts,\n      loading: loadingMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"j/AMyG1yXDmJsW1wtd2gO/BRGW4=\", false, function () {\n  return [useSelector, useSelector, useDispatch, usePostListStyles];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["C:/Users/1/Desktop/bloom_app/client/src/components/PostList.js"],"names":["React","useState","useSelector","useDispatch","fetchPosts","loadMorePosts","toggleUpvote","toggleDownvote","notify","PostCard","SortTabBar","LoadMoreButton","LoadingSpinner","getErrorMsg","Typography","usePostListStyles","PostList","sortBy","setSortBy","page","setPage","loadingMore","setLoadingMore","pageLoading","setPageLoading","posts","state","user","dispatch","classes","handleTabChange","e","newValue","err","handleLoadPosts","prevState","root","results","map","post","id","length","noSubscribedPosts"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  fetchPosts,\r\n  loadMorePosts,\r\n  toggleUpvote,\r\n  toggleDownvote,\r\n} from '../reducers/postReducer';\r\nimport { notify } from '../reducers/notificationReducer';\r\nimport PostCard from './PostCard';\r\nimport SortTabBar from './SortTabBar';\r\nimport LoadMoreButton from './LoadMoreButton';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport getErrorMsg from '../utils/getErrorMsg';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { usePostListStyles } from '../styles/muiStyles';\r\n\r\nconst PostList = () => {\r\n  const [sortBy, setSortBy] = useState('hot');\r\n  const [page, setPage] = useState(1);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(false);\r\n  const posts = useSelector((state) => state.posts);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const classes = usePostListStyles();\r\n\r\n  const handleTabChange = async (e, newValue) => {\r\n    try {\r\n      setPageLoading(true);\r\n      await dispatch(fetchPosts(newValue));\r\n      setSortBy(newValue);\r\n      setPageLoading(false);\r\n\r\n      if (page !== 1) {\r\n        setPage(1);\r\n      }\r\n    } catch (err) {\r\n      setPageLoading(false);\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  const handleLoadPosts = async () => {\r\n    try {\r\n      setLoadingMore(true);\r\n      await dispatch(loadMorePosts(sortBy, page + 1));\r\n      setPage((prevState) => prevState + 1);\r\n      setLoadingMore(false);\r\n    } catch (err) {\r\n      setLoadingMore(false);\r\n      dispatch(notify(getErrorMsg(err), 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SortTabBar\r\n        sortBy={sortBy}\r\n        handleTabChange={handleTabChange}\r\n        subscribedTab={true}\r\n        user={user}\r\n      />\r\n      {posts && posts.results && !pageLoading ? (\r\n        posts.results.map((post) => (\r\n          <PostCard\r\n            post={post}\r\n            key={post.id}\r\n            toggleUpvote={toggleUpvote}\r\n            toggleDownvote={toggleDownvote}\r\n          />\r\n        ))\r\n      ) : (\r\n        <LoadingSpinner text={'Fetching posts. Wait a sec.'} />\r\n      )}\r\n      {sortBy === 'subscribed' && posts.results.length === 0 && (\r\n        <div className={classes.noSubscribedPosts}>\r\n          <Typography variant=\"h5\" color=\"secondary\">\r\n            No Posts Found\r\n          </Typography>\r\n          <Typography variant=\"h6\" color=\"secondary\">\r\n            Subscribe to more subs if you haven't!\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      {posts && 'next' in posts && !pageLoading && (\r\n        <LoadMoreButton\r\n          handleLoadPosts={handleLoadPosts}\r\n          loading={loadingMore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}